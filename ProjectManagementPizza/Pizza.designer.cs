#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectManagementPizza
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLiPizza")]
	public partial class PizzaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertcommune(commune instance);
    partial void Updatecommune(commune instance);
    partial void Deletecommune(commune instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertdistrict(district instance);
    partial void Updatedistrict(district instance);
    partial void Deletedistrict(district instance);
    partial void Insertlogin(login instance);
    partial void Updatelogin(login instance);
    partial void Deletelogin(login instance);
    partial void Insertorder_detail(order_detail instance);
    partial void Updateorder_detail(order_detail instance);
    partial void Deleteorder_detail(order_detail instance);
    partial void Insertprovince(province instance);
    partial void Updateprovince(province instance);
    partial void Deleteprovince(province instance);
    partial void Insertstaff(staff instance);
    partial void Updatestaff(staff instance);
    partial void Deletestaff(staff instance);
    partial void Insertwarehouse(warehouse instance);
    partial void Updatewarehouse(warehouse instance);
    partial void Deletewarehouse(warehouse instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    partial void Insertpizza(pizza instance);
    partial void Updatepizza(pizza instance);
    partial void Deletepizza(pizza instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    #endregion
		
		public PizzaDataContext() : 
				base(global::ProjectManagementPizza.Properties.Settings.Default.QuanLiPizzaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PizzaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PizzaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PizzaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PizzaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<commune> communes
		{
			get
			{
				return this.GetTable<commune>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<district> districts
		{
			get
			{
				return this.GetTable<district>();
			}
		}
		
		public System.Data.Linq.Table<login> logins
		{
			get
			{
				return this.GetTable<login>();
			}
		}
		
		public System.Data.Linq.Table<order_detail> order_details
		{
			get
			{
				return this.GetTable<order_detail>();
			}
		}
		
		public System.Data.Linq.Table<province> provinces
		{
			get
			{
				return this.GetTable<province>();
			}
		}
		
		public System.Data.Linq.Table<staff> staffs
		{
			get
			{
				return this.GetTable<staff>();
			}
		}
		
		public System.Data.Linq.Table<warehouse> warehouses
		{
			get
			{
				return this.GetTable<warehouse>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
		
		public System.Data.Linq.Table<pizza> pizzas
		{
			get
			{
				return this.GetTable<pizza>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _category_id;
		
		private string _category_name;
		
		private EntitySet<pizza> _pizzas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    #endregion
		
		public category()
		{
			this._pizzas = new EntitySet<pizza>(new Action<pizza>(this.attach_pizzas), new Action<pizza>(this.detach_pizzas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_pizza", Storage="_pizzas", ThisKey="category_id", OtherKey="category_id")]
		public EntitySet<pizza> pizzas
		{
			get
			{
				return this._pizzas;
			}
			set
			{
				this._pizzas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pizzas(pizza entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_pizzas(pizza entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.commune")]
	public partial class commune : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _commune_id;
		
		private string _commune_name;
		
		private System.Nullable<int> _degree;
		
		private string _district_id;
		
		private EntitySet<customer> _customers;
		
		private EntitySet<staff> _staffs;
		
		private EntitySet<warehouse> _warehouses;
		
		private EntityRef<district> _district;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncommune_idChanging(string value);
    partial void Oncommune_idChanged();
    partial void Oncommune_nameChanging(string value);
    partial void Oncommune_nameChanged();
    partial void OndegreeChanging(System.Nullable<int> value);
    partial void OndegreeChanged();
    partial void Ondistrict_idChanging(string value);
    partial void Ondistrict_idChanged();
    #endregion
		
		public commune()
		{
			this._customers = new EntitySet<customer>(new Action<customer>(this.attach_customers), new Action<customer>(this.detach_customers));
			this._staffs = new EntitySet<staff>(new Action<staff>(this.attach_staffs), new Action<staff>(this.detach_staffs));
			this._warehouses = new EntitySet<warehouse>(new Action<warehouse>(this.attach_warehouses), new Action<warehouse>(this.detach_warehouses));
			this._district = default(EntityRef<district>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commune_id", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string commune_id
		{
			get
			{
				return this._commune_id;
			}
			set
			{
				if ((this._commune_id != value))
				{
					this.Oncommune_idChanging(value);
					this.SendPropertyChanging();
					this._commune_id = value;
					this.SendPropertyChanged("commune_id");
					this.Oncommune_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commune_name", DbType="NVarChar(50)")]
		public string commune_name
		{
			get
			{
				return this._commune_name;
			}
			set
			{
				if ((this._commune_name != value))
				{
					this.Oncommune_nameChanging(value);
					this.SendPropertyChanging();
					this._commune_name = value;
					this.SendPropertyChanged("commune_name");
					this.Oncommune_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_degree", DbType="Int")]
		public System.Nullable<int> degree
		{
			get
			{
				return this._degree;
			}
			set
			{
				if ((this._degree != value))
				{
					this.OndegreeChanging(value);
					this.SendPropertyChanging();
					this._degree = value;
					this.SendPropertyChanged("degree");
					this.OndegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_district_id", DbType="NChar(5)")]
		public string district_id
		{
			get
			{
				return this._district_id;
			}
			set
			{
				if ((this._district_id != value))
				{
					if (this._district.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondistrict_idChanging(value);
					this.SendPropertyChanging();
					this._district_id = value;
					this.SendPropertyChanged("district_id");
					this.Ondistrict_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commune_customer", Storage="_customers", ThisKey="commune_id", OtherKey="commune_id")]
		public EntitySet<customer> customers
		{
			get
			{
				return this._customers;
			}
			set
			{
				this._customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commune_staff", Storage="_staffs", ThisKey="commune_id", OtherKey="commune_id")]
		public EntitySet<staff> staffs
		{
			get
			{
				return this._staffs;
			}
			set
			{
				this._staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commune_warehouse", Storage="_warehouses", ThisKey="commune_id", OtherKey="commune_id")]
		public EntitySet<warehouse> warehouses
		{
			get
			{
				return this._warehouses;
			}
			set
			{
				this._warehouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="district_commune", Storage="_district", ThisKey="district_id", OtherKey="district_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public district district
		{
			get
			{
				return this._district.Entity;
			}
			set
			{
				district previousValue = this._district.Entity;
				if (((previousValue != value) 
							|| (this._district.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._district.Entity = null;
						previousValue.communes.Remove(this);
					}
					this._district.Entity = value;
					if ((value != null))
					{
						value.communes.Add(this);
						this._district_id = value.district_id;
					}
					else
					{
						this._district_id = default(string);
					}
					this.SendPropertyChanged("district");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.commune = this;
		}
		
		private void detach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.commune = null;
		}
		
		private void attach_staffs(staff entity)
		{
			this.SendPropertyChanging();
			entity.commune = this;
		}
		
		private void detach_staffs(staff entity)
		{
			this.SendPropertyChanging();
			entity.commune = null;
		}
		
		private void attach_warehouses(warehouse entity)
		{
			this.SendPropertyChanging();
			entity.commune = this;
		}
		
		private void detach_warehouses(warehouse entity)
		{
			this.SendPropertyChanging();
			entity.commune = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _customer_name;
		
		private string _phone_number;
		
		private string _email;
		
		private string _street;
		
		private string _commune_id;
		
		private EntitySet<order> _orders;
		
		private EntityRef<commune> _commune;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Oncustomer_nameChanging(string value);
    partial void Oncustomer_nameChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void Oncommune_idChanging(string value);
    partial void Oncommune_idChanged();
    #endregion
		
		public customer()
		{
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._commune = default(EntityRef<commune>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string customer_name
		{
			get
			{
				return this._customer_name;
			}
			set
			{
				if ((this._customer_name != value))
				{
					this.Oncustomer_nameChanging(value);
					this.SendPropertyChanging();
					this._customer_name = value;
					this.SendPropertyChanged("customer_name");
					this.Oncustomer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="NVarChar(15)")]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="NVarChar(100)")]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commune_id", DbType="NChar(5)")]
		public string commune_id
		{
			get
			{
				return this._commune_id;
			}
			set
			{
				if ((this._commune_id != value))
				{
					if (this._commune.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncommune_idChanging(value);
					this.SendPropertyChanging();
					this._commune_id = value;
					this.SendPropertyChanged("commune_id");
					this.Oncommune_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_orders", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commune_customer", Storage="_commune", ThisKey="commune_id", OtherKey="commune_id", IsForeignKey=true)]
		public commune commune
		{
			get
			{
				return this._commune.Entity;
			}
			set
			{
				commune previousValue = this._commune.Entity;
				if (((previousValue != value) 
							|| (this._commune.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._commune.Entity = null;
						previousValue.customers.Remove(this);
					}
					this._commune.Entity = value;
					if ((value != null))
					{
						value.customers.Add(this);
						this._commune_id = value.commune_id;
					}
					else
					{
						this._commune_id = default(string);
					}
					this.SendPropertyChanged("commune");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.district")]
	public partial class district : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _district_id;
		
		private string _district_name;
		
		private string _province_id;
		
		private EntitySet<commune> _communes;
		
		private EntityRef<province> _province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondistrict_idChanging(string value);
    partial void Ondistrict_idChanged();
    partial void Ondistrict_nameChanging(string value);
    partial void Ondistrict_nameChanged();
    partial void Onprovince_idChanging(string value);
    partial void Onprovince_idChanged();
    #endregion
		
		public district()
		{
			this._communes = new EntitySet<commune>(new Action<commune>(this.attach_communes), new Action<commune>(this.detach_communes));
			this._province = default(EntityRef<province>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_district_id", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string district_id
		{
			get
			{
				return this._district_id;
			}
			set
			{
				if ((this._district_id != value))
				{
					this.Ondistrict_idChanging(value);
					this.SendPropertyChanging();
					this._district_id = value;
					this.SendPropertyChanged("district_id");
					this.Ondistrict_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_district_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string district_name
		{
			get
			{
				return this._district_name;
			}
			set
			{
				if ((this._district_name != value))
				{
					this.Ondistrict_nameChanging(value);
					this.SendPropertyChanging();
					this._district_name = value;
					this.SendPropertyChanged("district_name");
					this.Ondistrict_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province_id", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string province_id
		{
			get
			{
				return this._province_id;
			}
			set
			{
				if ((this._province_id != value))
				{
					if (this._province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprovince_idChanging(value);
					this.SendPropertyChanging();
					this._province_id = value;
					this.SendPropertyChanged("province_id");
					this.Onprovince_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="district_commune", Storage="_communes", ThisKey="district_id", OtherKey="district_id")]
		public EntitySet<commune> communes
		{
			get
			{
				return this._communes;
			}
			set
			{
				this._communes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="province_district", Storage="_province", ThisKey="province_id", OtherKey="province_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public province province
		{
			get
			{
				return this._province.Entity;
			}
			set
			{
				province previousValue = this._province.Entity;
				if (((previousValue != value) 
							|| (this._province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._province.Entity = null;
						previousValue.districts.Remove(this);
					}
					this._province.Entity = value;
					if ((value != null))
					{
						value.districts.Add(this);
						this._province_id = value.province_id;
					}
					else
					{
						this._province_id = default(string);
					}
					this.SendPropertyChanged("province");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_communes(commune entity)
		{
			this.SendPropertyChanging();
			entity.district = this;
		}
		
		private void detach_communes(commune entity)
		{
			this.SendPropertyChanging();
			entity.district = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.login")]
	public partial class login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.order_detail")]
	public partial class order_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_detail_id;
		
		private int _order_id;
		
		private int _product_id;
		
		private int _quantity;
		
		private decimal _unit_price;
		
		private EntityRef<order> _order;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_detail_idChanging(int value);
    partial void Onorder_detail_idChanged();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void Onunit_priceChanging(decimal value);
    partial void Onunit_priceChanged();
    #endregion
		
		public order_detail()
		{
			this._order = default(EntityRef<order>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_detail_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int order_detail_id
		{
			get
			{
				return this._order_detail_id;
			}
			set
			{
				if ((this._order_detail_id != value))
				{
					this.Onorder_detail_idChanging(value);
					this.SendPropertyChanging();
					this._order_detail_id = value;
					this.SendPropertyChanged("order_detail_id");
					this.Onorder_detail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL")]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal unit_price
		{
			get
			{
				return this._unit_price;
			}
			set
			{
				if ((this._unit_price != value))
				{
					this.Onunit_priceChanging(value);
					this.SendPropertyChanging();
					this._unit_price = value;
					this.SendPropertyChanged("unit_price");
					this.Onunit_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_order_detail", Storage="_order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.order_details.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.order_details.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(int);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_order_detail", Storage="_product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.order_details.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.order_details.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(int);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.province")]
	public partial class province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _province_id;
		
		private string _province_name;
		
		private EntitySet<district> _districts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprovince_idChanging(string value);
    partial void Onprovince_idChanged();
    partial void Onprovince_nameChanging(string value);
    partial void Onprovince_nameChanged();
    #endregion
		
		public province()
		{
			this._districts = new EntitySet<district>(new Action<district>(this.attach_districts), new Action<district>(this.detach_districts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province_id", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string province_id
		{
			get
			{
				return this._province_id;
			}
			set
			{
				if ((this._province_id != value))
				{
					this.Onprovince_idChanging(value);
					this.SendPropertyChanging();
					this._province_id = value;
					this.SendPropertyChanged("province_id");
					this.Onprovince_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province_name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string province_name
		{
			get
			{
				return this._province_name;
			}
			set
			{
				if ((this._province_name != value))
				{
					this.Onprovince_nameChanging(value);
					this.SendPropertyChanging();
					this._province_name = value;
					this.SendPropertyChanged("province_name");
					this.Onprovince_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="province_district", Storage="_districts", ThisKey="province_id", OtherKey="province_id")]
		public EntitySet<district> districts
		{
			get
			{
				return this._districts;
			}
			set
			{
				this._districts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_districts(district entity)
		{
			this.SendPropertyChanging();
			entity.province = this;
		}
		
		private void detach_districts(district entity)
		{
			this.SendPropertyChanging();
			entity.province = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staff")]
	public partial class staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _staff_id;
		
		private string _staff_name;
		
		private string _phone_number;
		
		private string _email;
		
		private string _street;
		
		private string _commune_id;
		
		private System.Nullable<decimal> _salary;
		
		private EntitySet<order> _orders;
		
		private EntityRef<commune> _commune;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstaff_idChanging(int value);
    partial void Onstaff_idChanged();
    partial void Onstaff_nameChanging(string value);
    partial void Onstaff_nameChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void Oncommune_idChanging(string value);
    partial void Oncommune_idChanged();
    partial void OnsalaryChanging(System.Nullable<decimal> value);
    partial void OnsalaryChanged();
    #endregion
		
		public staff()
		{
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._commune = default(EntityRef<commune>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string staff_name
		{
			get
			{
				return this._staff_name;
			}
			set
			{
				if ((this._staff_name != value))
				{
					this.Onstaff_nameChanging(value);
					this.SendPropertyChanging();
					this._staff_name = value;
					this.SendPropertyChanged("staff_name");
					this.Onstaff_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="NVarChar(15)")]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="NVarChar(100)")]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commune_id", DbType="NChar(5)")]
		public string commune_id
		{
			get
			{
				return this._commune_id;
			}
			set
			{
				if ((this._commune_id != value))
				{
					if (this._commune.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncommune_idChanging(value);
					this.SendPropertyChanging();
					this._commune_id = value;
					this.SendPropertyChanged("commune_id");
					this.Oncommune_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="staff_order", Storage="_orders", ThisKey="staff_id", OtherKey="staff_id")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commune_staff", Storage="_commune", ThisKey="commune_id", OtherKey="commune_id", IsForeignKey=true)]
		public commune commune
		{
			get
			{
				return this._commune.Entity;
			}
			set
			{
				commune previousValue = this._commune.Entity;
				if (((previousValue != value) 
							|| (this._commune.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._commune.Entity = null;
						previousValue.staffs.Remove(this);
					}
					this._commune.Entity = value;
					if ((value != null))
					{
						value.staffs.Add(this);
						this._commune_id = value.commune_id;
					}
					else
					{
						this._commune_id = default(string);
					}
					this.SendPropertyChanged("commune");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.staff = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.warehouse")]
	public partial class warehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _warehouse_id;
		
		private string _warehouse_name;
		
		private string _street;
		
		private string _commune_id;
		
		private EntitySet<pizza> _pizzas;
		
		private EntityRef<commune> _commune;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onwarehouse_idChanging(int value);
    partial void Onwarehouse_idChanged();
    partial void Onwarehouse_nameChanging(string value);
    partial void Onwarehouse_nameChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void Oncommune_idChanging(string value);
    partial void Oncommune_idChanged();
    #endregion
		
		public warehouse()
		{
			this._pizzas = new EntitySet<pizza>(new Action<pizza>(this.attach_pizzas), new Action<pizza>(this.detach_pizzas));
			this._commune = default(EntityRef<commune>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouse_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int warehouse_id
		{
			get
			{
				return this._warehouse_id;
			}
			set
			{
				if ((this._warehouse_id != value))
				{
					this.Onwarehouse_idChanging(value);
					this.SendPropertyChanging();
					this._warehouse_id = value;
					this.SendPropertyChanged("warehouse_id");
					this.Onwarehouse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouse_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string warehouse_name
		{
			get
			{
				return this._warehouse_name;
			}
			set
			{
				if ((this._warehouse_name != value))
				{
					this.Onwarehouse_nameChanging(value);
					this.SendPropertyChanging();
					this._warehouse_name = value;
					this.SendPropertyChanged("warehouse_name");
					this.Onwarehouse_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="NVarChar(100)")]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commune_id", DbType="NChar(5)")]
		public string commune_id
		{
			get
			{
				return this._commune_id;
			}
			set
			{
				if ((this._commune_id != value))
				{
					if (this._commune.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncommune_idChanging(value);
					this.SendPropertyChanging();
					this._commune_id = value;
					this.SendPropertyChanged("commune_id");
					this.Oncommune_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="warehouse_pizza", Storage="_pizzas", ThisKey="warehouse_id", OtherKey="warehouse_id")]
		public EntitySet<pizza> pizzas
		{
			get
			{
				return this._pizzas;
			}
			set
			{
				this._pizzas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commune_warehouse", Storage="_commune", ThisKey="commune_id", OtherKey="commune_id", IsForeignKey=true)]
		public commune commune
		{
			get
			{
				return this._commune.Entity;
			}
			set
			{
				commune previousValue = this._commune.Entity;
				if (((previousValue != value) 
							|| (this._commune.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._commune.Entity = null;
						previousValue.warehouses.Remove(this);
					}
					this._commune.Entity = value;
					if ((value != null))
					{
						value.warehouses.Add(this);
						this._commune_id = value.commune_id;
					}
					else
					{
						this._commune_id = default(string);
					}
					this.SendPropertyChanged("commune");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pizzas(pizza entity)
		{
			this.SendPropertyChanging();
			entity.warehouse = this;
		}
		
		private void detach_pizzas(pizza entity)
		{
			this.SendPropertyChanging();
			entity.warehouse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private int _customer_id;
		
		private int _staff_id;
		
		private System.DateTime _order_date;
		
		private decimal _total;
		
		private string _status;
		
		private EntitySet<order_detail> _order_details;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<staff> _staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Onstaff_idChanging(int value);
    partial void Onstaff_idChanged();
    partial void Onorder_dateChanging(System.DateTime value);
    partial void Onorder_dateChanged();
    partial void OntotalChanging(decimal value);
    partial void OntotalChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public order()
		{
			this._order_details = new EntitySet<order_detail>(new Action<order_detail>(this.attach_order_details), new Action<order_detail>(this.detach_order_details));
			this._customer = default(EntityRef<customer>);
			this._staff = default(EntityRef<staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="Int NOT NULL")]
		public int staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					if (this._staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime NOT NULL")]
		public System.DateTime order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(10,2) NOT NULL")]
		public decimal total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_order_detail", Storage="_order_details", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<order_detail> order_details
		{
			get
			{
				return this._order_details;
			}
			set
			{
				this._order_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="staff_order", Storage="_staff", ThisKey="staff_id", OtherKey="staff_id", IsForeignKey=true)]
		public staff staff
		{
			get
			{
				return this._staff.Entity;
			}
			set
			{
				staff previousValue = this._staff.Entity;
				if (((previousValue != value) 
							|| (this._staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._staff.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._staff.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._staff_id = value.staff_id;
					}
					else
					{
						this._staff_id = default(int);
					}
					this.SendPropertyChanged("staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_order_details(order_detail entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_order_details(order_detail entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pizza")]
	public partial class pizza : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pizza_id;
		
		private string _pizza_name;
		
		private string _pizza_description;
		
		private decimal _price_small;
		
		private decimal _price_medium;
		
		private decimal _price_large;
		
		private System.Nullable<int> _category_id;
		
		private System.Nullable<int> _warehouse_id;
		
		private EntityRef<category> _category;
		
		private EntityRef<warehouse> _warehouse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpizza_idChanging(int value);
    partial void Onpizza_idChanged();
    partial void Onpizza_nameChanging(string value);
    partial void Onpizza_nameChanged();
    partial void Onpizza_descriptionChanging(string value);
    partial void Onpizza_descriptionChanged();
    partial void Onprice_smallChanging(decimal value);
    partial void Onprice_smallChanged();
    partial void Onprice_mediumChanging(decimal value);
    partial void Onprice_mediumChanged();
    partial void Onprice_largeChanging(decimal value);
    partial void Onprice_largeChanged();
    partial void Oncategory_idChanging(System.Nullable<int> value);
    partial void Oncategory_idChanged();
    partial void Onwarehouse_idChanging(System.Nullable<int> value);
    partial void Onwarehouse_idChanged();
    #endregion
		
		public pizza()
		{
			this._category = default(EntityRef<category>);
			this._warehouse = default(EntityRef<warehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pizza_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int pizza_id
		{
			get
			{
				return this._pizza_id;
			}
			set
			{
				if ((this._pizza_id != value))
				{
					this.Onpizza_idChanging(value);
					this.SendPropertyChanging();
					this._pizza_id = value;
					this.SendPropertyChanged("pizza_id");
					this.Onpizza_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pizza_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pizza_name
		{
			get
			{
				return this._pizza_name;
			}
			set
			{
				if ((this._pizza_name != value))
				{
					this.Onpizza_nameChanging(value);
					this.SendPropertyChanging();
					this._pizza_name = value;
					this.SendPropertyChanged("pizza_name");
					this.Onpizza_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pizza_description", DbType="VarChar(255)")]
		public string pizza_description
		{
			get
			{
				return this._pizza_description;
			}
			set
			{
				if ((this._pizza_description != value))
				{
					this.Onpizza_descriptionChanging(value);
					this.SendPropertyChanging();
					this._pizza_description = value;
					this.SendPropertyChanged("pizza_description");
					this.Onpizza_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_small", DbType="Decimal(10,2) NOT NULL")]
		public decimal price_small
		{
			get
			{
				return this._price_small;
			}
			set
			{
				if ((this._price_small != value))
				{
					this.Onprice_smallChanging(value);
					this.SendPropertyChanging();
					this._price_small = value;
					this.SendPropertyChanged("price_small");
					this.Onprice_smallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_medium", DbType="Decimal(10,2) NOT NULL")]
		public decimal price_medium
		{
			get
			{
				return this._price_medium;
			}
			set
			{
				if ((this._price_medium != value))
				{
					this.Onprice_mediumChanging(value);
					this.SendPropertyChanging();
					this._price_medium = value;
					this.SendPropertyChanged("price_medium");
					this.Onprice_mediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_large", DbType="Decimal(10,2) NOT NULL")]
		public decimal price_large
		{
			get
			{
				return this._price_large;
			}
			set
			{
				if ((this._price_large != value))
				{
					this.Onprice_largeChanging(value);
					this.SendPropertyChanging();
					this._price_large = value;
					this.SendPropertyChanged("price_large");
					this.Onprice_largeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int")]
		public System.Nullable<int> category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouse_id", DbType="Int")]
		public System.Nullable<int> warehouse_id
		{
			get
			{
				return this._warehouse_id;
			}
			set
			{
				if ((this._warehouse_id != value))
				{
					if (this._warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwarehouse_idChanging(value);
					this.SendPropertyChanging();
					this._warehouse_id = value;
					this.SendPropertyChanged("warehouse_id");
					this.Onwarehouse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_pizza", Storage="_category", ThisKey="category_id", OtherKey="category_id", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.pizzas.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.pizzas.Add(this);
						this._category_id = value.category_id;
					}
					else
					{
						this._category_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="warehouse_pizza", Storage="_warehouse", ThisKey="warehouse_id", OtherKey="warehouse_id", IsForeignKey=true)]
		public warehouse warehouse
		{
			get
			{
				return this._warehouse.Entity;
			}
			set
			{
				warehouse previousValue = this._warehouse.Entity;
				if (((previousValue != value) 
							|| (this._warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._warehouse.Entity = null;
						previousValue.pizzas.Remove(this);
					}
					this._warehouse.Entity = value;
					if ((value != null))
					{
						value.pizzas.Add(this);
						this._warehouse_id = value.warehouse_id;
					}
					else
					{
						this._warehouse_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("warehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _product_id;
		
		private string _product_name;
		
		private decimal _unit_price;
		
		private string _description;
		
		private System.Data.Linq.Binary _image;
		
		private bool _status;
		
		private EntitySet<order_detail> _order_details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Onproduct_nameChanging(string value);
    partial void Onproduct_nameChanged();
    partial void Onunit_priceChanging(decimal value);
    partial void Onunit_priceChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public product()
		{
			this._order_details = new EntitySet<order_detail>(new Action<order_detail>(this.attach_order_details), new Action<order_detail>(this.detach_order_details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string product_name
		{
			get
			{
				return this._product_name;
			}
			set
			{
				if ((this._product_name != value))
				{
					this.Onproduct_nameChanging(value);
					this.SendPropertyChanging();
					this._product_name = value;
					this.SendPropertyChanged("product_name");
					this.Onproduct_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal unit_price
		{
			get
			{
				return this._unit_price;
			}
			set
			{
				if ((this._unit_price != value))
				{
					this.Onunit_priceChanging(value);
					this.SendPropertyChanging();
					this._unit_price = value;
					this.SendPropertyChanged("unit_price");
					this.Onunit_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(500)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_order_detail", Storage="_order_details", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<order_detail> order_details
		{
			get
			{
				return this._order_details;
			}
			set
			{
				this._order_details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_order_details(order_detail entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_order_details(order_detail entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
}
#pragma warning restore 1591
